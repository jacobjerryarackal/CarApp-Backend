generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  phone     String    @unique
  city      String
  state     String
  country   String
  pincode   String
  password  String
  verified  Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  bookings  Booking[]
}

model Vehicle {
  id                Int            @id @default(autoincrement())
  name              String
  description       String
  primaryImage      String?
  otherImages       String[]       @default([])
  availableQuantity Int
  manufacturer      Manufacturer   @relation(fields: [manufacturerId], references: [id])
  model             Model          @relation(fields: [modelId], references: [id])
  vehicleTypes      VehicleType[]  @relation("VehicleTypes")
  manufacturerId    Int
  modelId           Int
  bookings          Booking[]
  Features          Features[]     @relation("FeaturesOnVehicles")
  vehiclePrices     VehiclePrice[] @relation("VehiclePrices")
}

model VehiclePrice {
  id            Int         @id @default(autoincrement())
  price         Float
  vehicleType   VehicleType @relation("VehicleTypePrices", fields: [vehicleTypeId], references: [id])
  vehicleTypeId Int
  vehicle       Vehicle     @relation("VehiclePrices", fields: [vehicleId], references: [id])
  vehicleId     Int
}

model Features {
  id             Int         @id @default(autoincrement())
  engineType     String
  transmission   String
  horsepower     Int?
  torque         Int?
  fuelEfficiency Float?
  dimensions     String?
  weight         Float?
  safetyFeatures String[]
  infotainment   String?
  vehicleType    VehicleType @relation("VehicleTypeFeatures", fields: [vehicleTypeId], references: [id])
  vehicleTypeId  Int
  vehicles       Vehicle[]   @relation("FeaturesOnVehicles")
}

model VehicleType {
  id            Int            @id @default(autoincrement())
  name          String
  description   String?
  features      Features[]     @relation("VehicleTypeFeatures")
  vehiclePrices VehiclePrice[] @relation("VehicleTypePrices")
  vehicles      Vehicle[]      @relation("VehicleTypes")
}

model Manufacturer {
  id       Int       @id @default(autoincrement())
  name     String
  vehicles Vehicle[]
  models   Model[]
}

model Model {
  id             Int          @id @default(autoincrement())
  name           String
  manufacturer   Manufacturer @relation(fields: [manufacturerId], references: [id])
  manufacturerId Int
  vehicles       Vehicle[]
}

model Booking {
  id          Int      @id @default(autoincrement())
  vehicle     Vehicle  @relation(fields: [vehicleId], references: [id])
  vehicleId   Int
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  userName    String
  bookingDate DateTime @default(now())
  totalPrice  Float
}
